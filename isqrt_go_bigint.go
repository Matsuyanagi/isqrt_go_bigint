package main

/* 
	多倍長整数の平方根

 */

import (
    "fmt"
    "math/big"
)

/* 
go run isqrt.go

0  : sqrt(  0 ) =  0
15  : sqrt(  15 ) =  3
53  : sqrt(  53 ) =  7
193  : sqrt(  193 ) =  13
456  : sqrt(  456 ) =  21
46340  : sqrt(  46340 ) =  215
4200000000  : sqrt(  4200000000 ) =  64807
12345678901234567  : sqrt(  12345678901234567 ) =  111111110
1111111111111  : sqrt(  1111111111111 ) =  1054092
9223372036854775807  : sqrt(  9223372036854775807 ) =  3037000499
18446744073709551615  : sqrt(  18446744073709551615 ) =  4294967295
1844674407370955161518446744073709551615  : sqrt(  1844674407370955161518446744073709551615 ) =  42949672959999999999
999999999999999999999999999999999999999  : sqrt(  999999999999999999999999999999999999999 ) =  31622776601683793319
340282366920938463426481119284349108225  : sqrt(  340282366920938463426481119284349108225 ) =  18446744073709551615

 */


func main()  {
	
//	n, _ := new(big.Int).SetString("16329805957987392833", 10)
//	fmt.Println(n)

	strs := []string{ "0", "15", "53", "193", "456", "46340", "4200000000",
							"12345678901234567", "1111111111111", "9223372036854775807", "18446744073709551615",
							"1844674407370955161518446744073709551615",
							"999999999999999999999999999999999999999",
							"340282366920938463426481119284349108225", 		// 18446744073709551615 * 18446744073709551615 => 340282366920938463426481119284349108225
							  };

	for _, v := range strs {
	    bigInt := &big.Int{}
	    value, _ := bigInt.SetString(v, 10)
	    sqrt := bigInt.Sqrt( value )
	    fmt.Println( v, " : sqrt( ", v , ") = ", sqrt)
	}


}


